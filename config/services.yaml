# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.api:
        class: App\Admin\ApiAdmin
        arguments: [~, App\Entity\Api, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Api }
        public: true

    admin.request:
        class: App\Admin\RequestAdmin
        arguments: [~, App\Entity\Request, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Request }
        public: true

    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Category }
        public: true

    admin.partner:
        class: App\Admin\PartnerAdmin
        arguments: [~, App\Entity\Partner, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Partner }
        public: true

    admin.technology:
        class: App\Admin\TechnologyAdmin
        arguments: [~, App\Entity\Technology, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Technology }
        public: true

    admin.parameter:
        class: App\Admin\ParameterAdmin
        arguments: [~, App\Entity\Parameter, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Parameter }
        public: true
